00000000000000000000000000000000 --0: no op start
00111100101000010000000000000000 --1: add r5, r1, r0
00000000000000000000000000000000 --2: no op
00000000000000000000000000000000 --3: no op
00000000000000000000000000000000 --4: no op
00000000000000000000000000000000 --5: no op
00111100101001010001000000000001 --6: sub r5, r5, r2
00000000000000000000000000000000 --7: no op
00000000000000000000000000000000 --8: no op
00000000000000000000000000000000 --9: no op
00100000011000110000000000000001 --a: addi r3, r3, 1
00110100000001010000000000000000 --b: cpi r5, 0
10010000000000000000000000010010 --c: brnl 12
00000000000000000000000000000000 --d: no op
00000000000000000000000000000000 --e: no op
10011000000000000000000000000010 --f: jp 2
00000000000000000000000000000000 --10: no op
00000000000000000000000000000000 --11: no op
00111100100001010001000000000000 --12: add r4, r5, r2
00100100011000110000000000000001 --13: subi r3, r3, 1
00000000000000000000000000000000 --14: no op
00000000000000000000000000000000 --15: no op
00000000000000000000000000000000 --16: no op
00000000000000000000000000000000 --17: no op
%

Division

A simple program that takes r1 and r2 as inputs, and outputs
the result of their division into r3 and the remainder into r4.
As an example, this division program doesn't utilize the forwarding capabilities of the OZ-3

63% no ops, compared to 33% in the forwarding program
It also nearly doubled the size of the program.

This program took 192% the time of the same program with forwarding.
